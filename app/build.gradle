apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':lib:MyUtil')
}

android {
    packagingOptions {
//        pickFirst 'META-INF/foo.txt'

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
        quiet false
        showAll true
    }

    dexOptions { preDexLibraries = false }
}

android {
    compileSdkVersion Integer.parseInt(project.compileSdkVersion)
    buildToolsVersion project.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
    }

    signingConfigs {
        release {
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
        }
        debug {}
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix "." + buildTime()

            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    new File(project(':lib:MyUtil').getProjectDir(), 'util-proguard-rules.pro'),
                    'proguard-rules.pro'
        }

        debug {
            zipAlignEnabled true

            signingConfig signingConfigs.release
            versionNameSuffix "." + buildTime() + ".debug"
        }

        beta {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            signingConfig signingConfigs.release
            debuggable true
            versionNameSuffix "." + buildTime() + ".beta"

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    new File(project(':lib:MyUtil').getProjectDir(), 'util-proguard-rules.pro'),
                    'proguard-rules.pro'
        }
    }

}

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('MMddHH')
    return formattedDate
}

